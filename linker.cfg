# MEMORY MAP:
# 0000-00FF: ZP (Zero Page)
# 0100-3FFF: RAM
# 4000-4FFF: I/O
# 5000-7FFF: Video RAM
# 8000-FFFF: ROM

MEMORY {
    ZP: start = $0000, size = $0100, type = rw;
    RAM: start = $0200, size = $4000-200, type = rw; # save space for zeropage and stack
    ROM: start = $8000, size = $8000, type = ro, fill=yes;
    # VECTORS: start = $FFFA, size = $0006, type = ro;
}

SEGMENTS  {
    ZEROPAGE: load = ZP,      type = zp;
    CODE:     load = ROM,     type = ro;
    DATA:     load = ROM,     type = rw,  define   = yes, run = RAM;
    BSS:      load = RAM,     type = bss, define   = yes;
    RODATA:   load = ROM,     type = ro;
    VECTORS:  load = ROM, type = ro,  start    = $FFFA;
}

# FEATURES { # https://github.com/cc65/cc65/blob/925a589b90d5d75e01eed1d9c3863355a97a878c/cfg/none.cfg#L23C1-L37C2
#     CONDES: type    = constructor,
#             label   = __CONSTRUCTOR_TABLE__,
#             count   = __CONSTRUCTOR_COUNT__,
#             segment = ONCE;
#     CONDES: type    = destructor,
#             label   = __DESTRUCTOR_TABLE__,
#             count   = __DESTRUCTOR_COUNT__,
#             segment = RODATA;
#     CONDES: type    = interruptor,
#             label   = __INTERRUPTOR_TABLE__,
#             count   = __INTERRUPTOR_COUNT__,
#             segment = RODATA,
#             import  = __CALLIRQ__;
# }